{"ast":null,"code":"var _jsxFileName = \"/Users/studente/myappreact/src/App.tsx\";\nimport React, { Fragment } from 'react'; // function App = ():JSX.Elemnt => {} -> equivale a scrivere la funzione di sotto\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return (\n    /*#__PURE__*/\n    //in react non si possono avere altri div -> detti nodi\n    _jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: \"sto funzionando\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/studente/myappreact/src/App.tsx"],"names":["React","Fragment","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;;;AACA,SAASC,GAAT,GAAe;AACb;AAAA;AACE;AACA,YAAC,QAAD;AAAA,6BACJ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA;AAFF;AASD;;KAVQA,G;AAYT,eAAeA,GAAf","sourcesContent":["import React, { Fragment } from 'react';\n\n// function App = ():JSX.Elemnt => {} -> equivale a scrivere la funzione di sotto\nfunction App() {\n  return (\n    //in react non si possono avere altri div -> detti nodi\n    <Fragment>\n<div className=\"App\">\n      sto funzionando\n    </div>\n    </Fragment>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}