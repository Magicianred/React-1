{"ast":null,"code":"var _jsxFileName = \"/Users/studente/Desktop/Steve Jobs Academy/React/myappreact/src/components/MyApi/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//import Service from '../Services'\nconst myApiJson = \"https://jsonplaceholder.typicode.com/users\";\nexport const MyApi = () => {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [users, setUsers] = useState();\n\n  const getGitHubUserWithFetch = async () => {\n    const response = await fetch(gitHubUrl);\n    const jsonData = await response.json();\n    setUserData(jsonData);\n  }; //eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n  useEffect(() => {\n    // (async () => {\n    //     const response = await _get(null);\n    //     console.log('response api ', response);\n    //     setUsers(await response);\n    // })();\n    const myApiJsonUsers = async () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"we have \", users === null || users === void 0 ? void 0 : users.length, \" users\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyApi, \"LQkddvx2HtKGflMjzZE1OVCsOUU=\");\n\n_c = MyApi;\nexport default MyApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApi\");","map":{"version":3,"sources":["/Users/studente/Desktop/Steve Jobs Academy/React/myappreact/src/components/MyApi/index.tsx"],"names":["React","useEffect","useState","Col","Row","myApiJson","MyApi","users","setUsers","getGitHubUserWithFetch","response","fetch","gitHubUrl","jsonData","json","setUserData","myApiJsonUsers","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;;;AAEA;AAEA,MAAMC,SAAS,GAAG,4CAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAK;AAAA;;AACtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;;AAEA,QAAMO,sBAAsB,GAAG,YAAY;AACvC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,SAAD,CAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAvB;AACAC,IAAAA,WAAW,CAACF,QAAD,CAAX;AACD,GAJH,CAJsB,CAStB;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AAEA,UAAMe,cAAc,GAAG,YAAS,CAAE,CAAlC;AACH,GARQ,EAQN,EARM,CAAT;AAUI,sBACI;AAAA,4BACA;AAAA,6BAAYT,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEU,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAiBP,CArCM;;GAAMX,K;;KAAAA,K;AAuCb,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { _get } from '../Services/_get';\n//import Service from '../Services'\n\nconst myApiJson = \"https://jsonplaceholder.typicode.com/users\"\n\nexport const MyApi = ()=> {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [users, setUsers] = useState<string>();\n\n    const getGitHubUserWithFetch = async () => {\n        const response = await fetch(gitHubUrl);\n        const jsonData = await response.json();\n        setUserData(jsonData);\n      };\n    //eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n        // (async () => {\n        //     const response = await _get(null);\n        //     console.log('response api ', response);\n        //     setUsers(await response);\n        // })();\n\n        const myApiJsonUsers = async()=>{};\n    }, []);\n\n        return (\n            <>\n            <p>we have {users?.length} users</p>\n                <Row>\n                    <Col>\n                        \n                        {/* <h3> List Api Json</h3>\n                        {Object.keys(Service._get).map((item, i)=>(\n                            <li key={i}>\n                                <span>Key name: {item.name}</span>\n                            </li>\n                        ))} */}\n                    </Col>\n                </Row>\n            </>\n        );\n\n};\n\nexport default MyApi;"]},"metadata":{},"sourceType":"module"}