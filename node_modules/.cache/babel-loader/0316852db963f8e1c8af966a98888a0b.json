{"ast":null,"code":"var _jsxFileName = \"/Users/studente/Desktop/Steve Jobs Academy/React/myappreact/src/components/MyApi/index.tsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from 'react';\n// import { Col, Row } from 'react-bootstrap';\n// import { _get } from '../Services/_get';\n// //import Service from '../Services'\n// export const MyApi = ()=> {\n//     // eslint-disable-next-line react-hooks/rules-of-hooks\n//     const [users, setUsers] = useState<string>();\n//     //eslint-disable-next-line react-hooks/rules-of-hooks\n//     useEffect(() => {\n//         (async () => {\n//             const response = await _get(null);\n//             console.log('response api ', response);\n//             setUsers(await response);\n//         })();\n//     }, []);\n//         return (\n//             <>\n//             <p>we have {users?.length} users</p>\n//                 <Row>\n//                     <Col>\n//                         <h3> List Api Json</h3>\n//                         {/* {Object.keys(Service._get).map((item, i)=>(\n//                             <li key={i}>\n//                                 <span>Key name: {item.name}</span>\n//                             </li>\n//                         ))} */}\n//                     </Col>\n//                 </Row>\n//             </>\n//         );\n// };\n// export default MyApi;\nimport React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap'; //import { _get } from '../Services/_get';\n//import Service from '../Services'\n\nimport data from \"../data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst myApiJson = \"https://jsonplaceholder.typicode.com/users\";\nconst results = data.results;\nexport const MyApi = () => {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [users, setUsers] = useState();\n\n  const getGitHubUserWithFetch = async () => {\n    const response = await fetch(myApiJson);\n    const jsonData = await response.json();\n    setUsers(jsonData);\n  }; //eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n  useEffect(() => {\n    // (async () => {\n    //     const response = await _get(null);\n    //     console.log('response api ', response);\n    //     setUsers(await response);\n    // })();\n    getGitHubUserWithFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"we have \", users === null || users === void 0 ? void 0 : users.length, \" users\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: data.results.map(results => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: results.Area\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: skill.results.map(name => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: skillDetail.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 35\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyApi, \"LQkddvx2HtKGflMjzZE1OVCsOUU=\");\n\n_c = MyApi;\nexport default MyApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApi\");","map":{"version":3,"sources":["/Users/studente/Desktop/Steve Jobs Academy/React/myappreact/src/components/MyApi/index.tsx"],"names":["React","useEffect","useState","Col","Row","data","myApiJson","results","MyApi","users","setUsers","getGitHubUserWithFetch","response","fetch","jsonData","json","length","map","Area","skill","name","skillDetail","Name"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB,C,CACA;AACA;;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AACA,MAAMC,SAAS,GAAG,4CAAlB;AAEA,MAAMC,OAAO,GAAGF,IAAI,CAACE,OAArB;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAK;AAAA;;AACtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;;AAEA,QAAMS,sBAAsB,GAAG,YAAY;AACvC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,SAAD,CAA5B;AACA,UAAMQ,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAL,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAJH,CAJsB,CAStB;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AAEAU,IAAAA,sBAAsB;AACzB,GARQ,EAQN,EARM,CAAT;AAUI,sBACI;AAAA,4BACA;AAAA,6BAAYF,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEJ;AAAA,gBACKT;AADL;AAAA;AAAA;AAAA;AAAA,YAFI,eAKI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAA,kBAQFF,IAAI,CAACE,OAAL,CAAaU,GAAb,CAAkBV,OAAD,IAAa;AAC5B,8BACE;AAAA,oCACE;AAAA,wBAAKA,OAAO,CAACW;AAAb;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAEIC,KAAK,CAACZ,OAAN,CAAcU,GAAd,CAAmBG,IAAD,IAAU;AAC1B,oCACI;AAAA,4BACGC,WAAW,CAACC;AADf;AAAA;AAAA;AAAA;AAAA,wBADJ;AAKD,eAND;AAFJ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAgBD,SAjBD;AARE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAsCP,CA1DM;;GAAMd,K;;KAAAA,K;AA4Db,eAAeA,KAAf","sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Col, Row } from 'react-bootstrap';\n// import { _get } from '../Services/_get';\n// //import Service from '../Services'\n\n// export const MyApi = ()=> {\n//     // eslint-disable-next-line react-hooks/rules-of-hooks\n//     const [users, setUsers] = useState<string>();\n\n\n//     //eslint-disable-next-line react-hooks/rules-of-hooks\n//     useEffect(() => {\n//         (async () => {\n//             const response = await _get(null);\n//             console.log('response api ', response);\n//             setUsers(await response);\n//         })();\n//     }, []);\n\n//         return (\n//             <>\n//             <p>we have {users?.length} users</p>\n//                 <Row>\n//                     <Col>\n//                         <h3> List Api Json</h3>\n//                         {/* {Object.keys(Service._get).map((item, i)=>(\n//                             <li key={i}>\n//                                 <span>Key name: {item.name}</span>\n//                             </li>\n//                         ))} */}\n//                     </Col>\n//                 </Row>\n//             </>\n//         );\n\n// };\n\n// export default MyApi;\n\n\nimport React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\n//import { _get } from '../Services/_get';\n//import Service from '../Services'\nimport data from \"../data.json\"; \nconst myApiJson = \"https://jsonplaceholder.typicode.com/users\"\n\nconst results = data.results;\n\nexport const MyApi = ()=> {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [users, setUsers] = useState<string>();\n\n    const getGitHubUserWithFetch = async () => {\n        const response = await fetch(myApiJson);\n        const jsonData = await response.json();\n        setUsers(jsonData);\n      };\n    //eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n        // (async () => {\n        //     const response = await _get(null);\n        //     console.log('response api ', response);\n        //     setUsers(await response);\n        // })();\n\n        getGitHubUserWithFetch();\n    }, []);\n\n        return (\n            <>\n            <p>we have {users?.length} users</p>\n        <ul>\n            {results}\n        </ul>\n                <Row>\n                    <Col>\n                        {/* <h3> List Api Json</h3>\n                        {Object.keys(Service._get).map((item, i)=>(\n                            <li key={i}>\n                                <span>Key name: {item.name}</span>\n                            </li>\n                        ))} */}\n                    {\n                  data.results.map((results) => {\n                    return (\n                      <div>\n                        <h4>{results.Area}</h4>\n                        <ul>\n                          {\n                            skill.results.map((name) => {\n                              return (\n                                  <li>\n                                    {skillDetail.Name}\n                                  </li>\n                              );\n                            })\n                          }\n                        </ul>\n                      </div>\n                    );\n                  })\n                } \n                    </Col>\n                </Row>\n            </>\n        );\n};\n\nexport default MyApi;\n"]},"metadata":{},"sourceType":"module"}