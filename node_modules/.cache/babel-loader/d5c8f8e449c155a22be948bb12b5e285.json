{"ast":null,"code":"var _jsxFileName = \"/Users/studente/Desktop/Steve Jobs Academy/React/myappreact/src/components/MyApi/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//import Service from '../Services'\nexport const MyApi = () => {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [users, setUsers] = useState(); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  function getList() {\n    return fetch('https://jsonplaceholder.typicode.com/users').then(data => data.json());\n  } //eslint-disable-next-line react-hooks/rules-of-hooks\n  // useEffect(() => {\n  //     (async () => {\n  //         const response = await _get(null);\n  //         console.log('response api ', response);\n  //         setUsers(await response);\n  //     })();\n  // }, []);\n\n\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    getList().then(items => {\n      if (mounted) {\n        setList(items);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"we have \", users === null || users === void 0 ? void 0 : users.length, \" users\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyApi, \"0cBP7sEArWs376wWinMxhGZiYmY=\");\n\n_c = MyApi;\nexport default MyApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApi\");","map":{"version":3,"sources":["/Users/studente/Desktop/Steve Jobs Academy/React/myappreact/src/components/MyApi/index.tsx"],"names":["React","useEffect","useState","Col","Row","MyApi","users","setUsers","getList","fetch","then","data","json","list","setList","mounted","items","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;;;AAEA;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAK;AAAA;;AACtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC,CAFsB,CAItB;;AACA,WAASM,OAAT,GAAmB;AACf,WAAOC,KAAK,CAAC,4CAAD,CAAL,CACJC,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,GARmB,CAStB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,OAAO,GAAG,IAAd;AACAP,IAAAA,OAAO,GACJE,IADH,CACQM,KAAK,IAAI;AACb,UAAGD,OAAH,EAAY;AACVD,QAAAA,OAAO,CAACE,KAAD,CAAP;AACD;AACF,KALH;AAMA,WAAO,MAAMD,OAAO,GAAG,KAAvB;AACD,GATM,EASJ,EATI,CAAT;AAWI,sBACI;AAAA,4BACA;AAAA,6BAAYT,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEW,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAiBP,CA9CM;;GAAMZ,K;;KAAAA,K;AAgDb,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { _get } from '../Services/_get';\n//import Service from '../Services'\n\nexport const MyApi = ()=> {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [users, setUsers] = useState<string>();\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function getList() {\n        return fetch('https://jsonplaceholder.typicode.com/users')\n          .then(data => data.json())\n      }\n    //eslint-disable-next-line react-hooks/rules-of-hooks\n    // useEffect(() => {\n    //     (async () => {\n    //         const response = await _get(null);\n    //         console.log('response api ', response);\n    //         setUsers(await response);\n    //     })();\n    // }, []);\n    const [list, setList] = useState([]);\n    useEffect(() => {\n        let mounted = true;\n        getList()\n          .then(items => {\n            if(mounted) {\n              setList(items)\n            }\n          })\n        return () => mounted = false;\n      }, [])\n\n        return (\n            <>\n            <p>we have {users?.length} users</p>\n                <Row>\n                    <Col>\n                        \n                        {/* <h3> List Api Json</h3>\n                        {Object.keys(Service._get).map((item, i)=>(\n                            <li key={i}>\n                                <span>Key name: {item.name}</span>\n                            </li>\n                        ))} */}\n                    </Col>\n                </Row>\n            </>\n        );\n\n};\n\nexport default MyApi;"]},"metadata":{},"sourceType":"module"}